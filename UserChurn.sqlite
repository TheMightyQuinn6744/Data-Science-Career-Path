 /*Select the first 100 rows from table subscriptions*/
 SELECT *
 FROM subscriptions
 LIMIT 100;

/*Determine ht range of months provided from table subscriptions*/
 SELECT MIN(subscription_start) AS 'First Recorded Day', MAX(subscription_end) AS 'Last Day Recorded'
 FROM subscriptions;
 
/*Create a temporary table months*/
WITH months AS 
(SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-29' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day),
--temporary table cross_join
cross_join AS
(SELECT * FROM subscriptions
CROSS JOIN months
),
/*Create a temporary table status*/
status AS
(SELECT id, first_day AS month,
CASE
  WHEN (subscription_start < first_day)
    AND (
      subscription_end > first_day
      OR subscription_end IS NULL
    ) AND (segment = 87) THEN 1
    ELSE 0
  END as is_active_87,
  CASE
  WHEN (subscription_start < first_day)
    AND (
      subscription_end > first_day
      OR subscription_end IS NULL
    ) AND (segment = 30) THEN 1
    ELSE 0
  END as is_active_30,
  /*Add is_canceled_87 to column status*/
  CASE
    WHEN (subscription_end BETWEEN first_day AND last_day) AND (segment = 87) THEN 1
    ELSE 0
  END AS is_canceled_87,
  /*Add is_canceled_30 to column status*/
   CASE
    WHEN (subscription_end BETWEEN first_day AND last_day) AND (segment = 30) THEN 1
    ELSE 0
  END AS is_canceled_30
  FROM cross_join
),
/*Create a status aggregate temporary table, that is the sum of active & canceled subscriptions for each segment for each month*/
status_aggregate AS
(SELECT month,
SUM(is_active_87) AS sum_active_87, 
SUM(is_active_30) AS sum_active_30, 
SUM(is_canceled_87) AS sum_canceled_87, 
SUM(is_canceled_30) AS sum_canceled_30
  FROM status
  GROUP BY month
)
/*Calculate churn rates for two segments over the three month period*/
SELECT month, 1.0 * sum_canceled_87 / sum_active_87 AS churn_rate_87, 1.0 * sum_canceled_30 / sum_active_30 AS churn_rate_30
FROM status_aggregate;

